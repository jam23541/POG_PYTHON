# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UI1.pyw'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
import test
import time
import threading
from PyQt5.QtWidgets import QApplication,QMainWindow
# mqtt part
import paho.mqtt.client as mqtt
broker = '47.103.208.137'
port = 1883
topic = "Debug"
client_id = f'myPython'

def connect_mqtt():
    def on_connect(client, userdata, flags, rc):
        if rc == 0:
            print("Connected to MQTT Broker!")
        else:
            print("Failed to connect, return code %d\n", rc)
    # Set Connecting Client ID
    client = mqtt.Client(client_id)
    client.on_connect = on_connect
    client.connect(broker, port)
    return client


def publish(client):
    msg_count = 0
    while True:
        time.sleep(1)
        msg = f"messages: {msg_count}"
        result = client.publish(topic, msg)
        # result: [0, 1]
        status = result[0]
        if status == 0:
            print(f"Send `{msg}` to topic `{topic}`")
        else:
            print(f"Failed to send message to topic {topic}")
        msg_count += 1

def subscribe(client: mqtt):
    def on_message(client, userdata, msg):
        print(f"Received `{msg.payload.decode()}` from `{msg.topic}` topic")

    client.subscribe("ARCANE/MOFANGDIANCHI/SLAVE")
    client.on_message = on_message

#def run():

class myThread (threading.Thread):   #继承父类threading.Thread
    def __init__(self):
        threading.Thread.__init__(self)

    def run(self):                   #把要执行的代码写到run函数里面 线程在创建后会直接运行run函数
        client = connect_mqtt()
        client.loop_start()
        publish(client)


thread1 = myThread()
thread1.start()

if __name__ == '__main__':
    app = QApplication(sys.argv)

    MainWindow = QMainWindow()

    ui = test.Ui_MainWindow()

    ui.setupUi(MainWindow)

    MainWindow.show()

    sys.exit(app.exec_())
    print("exit")
